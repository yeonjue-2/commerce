openapi: 3.0.0
info:
  title: Commerce API
  description: 주문 결제 시스템의 API 명세입니다.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: 로컬 서버
tags:
  - name: product
    description: 상품 관련 API
  - name: order
    description: 주문 관련 API
  - name: payment
    description: 결제 관련 API
  - name: user
    description: 사용자 관련 API
  - name: auth
    description: authentication 관련 API
paths:
  /v1/products:
    get:
      tags:
        - product
      summary: 전체 상품 목록 조회
      description: 모든 상품을 페이지 단위로 조회합니다.
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/size"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductListResponseV1"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                INVALID_PAGE:
                  $ref: "#/components/examples/INVALID_PAGE"
                INVALID_SIZE:
                  $ref: "#/components/examples/INVALID_SIZE"
  /v1/orders:
    post:
      tags:
        - order
      summary: 주문 생성 요청
      description: 상품 재고 확인 후 주문을 생성합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRequestV1"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponseV1"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                INVALID_ORDER_QUANTITY:
                  $ref: "#/components/examples/INVALID_ORDER_QUANTITY"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                NOT_FOUND_PRODUCT:
                  $ref: "#/components/examples/NOT_FOUND_PRODUCT"
        '409':
          description: Conflict (재고 부족)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                INSUFFICIENT_STOCK:
                  $ref: "#/components/examples/INSUFFICIENT_STOCK"
    get:
      tags:
        - order
      summary: 전체 주문 목록 조회
      description: 모든 주문을 페이지 단위로 조회합니다.
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/size"
        - name: order_status
          in: query
          required: false
          description: 주문 상태 필터 (INITIAL, PAID, CANCELED)
          schema:
            type: string
            enum:
              - INITIAL
              - PAID
              - CANCELED
            example: INITIAL
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderListResponseV1"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                INVALID_PAGE:
                  $ref: "#/components/examples/INVALID_PAGE"
                INVALID_SIZE:
                  $ref: "#/components/examples/INVALID_SIZE"
  #                INVALID_ORDER_STATUS:
  #                  $ref: "#/components/examples/INVALID_ORDER_STATUS"
  /v1/orders/{order_id}:
    get:
      tags:
        - order
      summary: 주문 상세 조회
      description: 주문 ID로 주문 정보를 조회합니다.
      parameters:
        - $ref: "#/components/parameters/order_id"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponseV1"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                INVALID_ORDER_ID_PARAM:
                  $ref: "#/components/examples/INVALID_ORDER_ID_PARAM"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                NOT_FOUND_ORDER:
                  $ref: "#/components/examples/NOT_FOUND_ORDER"
  /v1/payments/orders/{order_id}/ready:
    put:
      tags:
        - payment
      summary: 결제 준비 요청
      description: |
        주문 ID로 카카오페이 결제를 준비합니다. 
        결제 고유 번호(TID)와 리다이렉트 URL을 응답합니다.
      parameters:
        - $ref: "#/components/parameters/order_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KakaoPayReadyRequestV1"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KakaoPayReadyResponseV1"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                INVALID_ORDER_ID_PARAM:
                  $ref: "#/components/examples/INVALID_ORDER_ID_PARAM"
                INVALID_ORDER_STATUS:
                  $ref: "#/components/examples/INVALID_ORDER_STATUS_TRANSITION"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                NOT_FOUND_ORDER:
                  $ref: "#/components/examples/NOT_FOUND_ORDER"
  /v1/users/join:
    post:
      tags:
        - user
      summary: 사용자 회원가입 요청
      description: 신규 사용자의 회원가입을 처리하고, 성공 시 생성된 사용자 정보를 반환합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserJoinRequestV1"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserJoinResponseV1"
        '400':
          description: Bad Request - 유효성 검증 실패
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                INVALID_LOGIN_INPUT:
                  $ref: "#/components/examples/INVALID_LOGIN_INPUT"
        '409':
          description: Confilct - 이미 존재하는 사용자
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                INVALID_CREDENTIALS:
                  $ref: "#/components/examples/USER_ALREADY_EXISTS"
  /v1/users/login:
    post:
      tags:
        - user
      summary: 사용자 일반 로그인(JWT)
      description: 등록된 사용자의 ID와 비밀번호를 사용하여 로그인하고, 성공 시 JWT 토큰을 발급합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLoginRequestV1"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLoginResponseV1"
        '400':
          description: Bad Request - 유효성 검증 실패
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                INVALID_LOGIN_INPUT:
                  $ref: "#/components/examples/INVALID_LOGIN_INPUT"
        '401':
          description: Unauthorized - 인증 실패
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                INVALID_CREDENTIALS:
                  $ref: "#/components/examples/INVALID_CREDENTIALS"
  /v1/users/{user_id}:
    get:
      tags:
        - user
      summary: 사용자 정보 조회 (인증 필요)
      description: 로그인한 사용자의 정보를 조회합니다.
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/user_id"
      responses:
        '200':
          description: OK - 사용자 정보 조회 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponseV1"
        '401':
          description: Unauthorized - 인증 실패
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                EXPIRED_TOKEN:
                  $ref: "#/components/examples/EXPIRED_TOKEN"
        '403':
          description: Forbidden - 권한없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PERMISSION_DENIED:
                  $ref: "#/components/examples/PERMISSION_DENIED"
        '404':
          description: NOT_FOUND
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                NOT_FOUND_USER:
                  $ref: "#/components/examples/NOT_FOUND_USER"
  /v1/auth/token/refresh:
    post:
      tags:
        - auth
      summary: JWT Access Token 갱신
      description: Refresh Token을 사용하여 새로운 Access Token과 Refresh Token을 발급합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthTokenRefreshRequestV1"
      responses:
        '200':
          description: OK - 토큰 갱신 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLoginResponseV1"
        '400':
          description: Bad Request - 유효성 검증 실패
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                INVALID_TOKEN:
                  $ref: "#/components/examples/INVALID_TOKEN"
        '401':
          description: Unauthorized - 인증 실패
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                EXPIRED_TOKEN:
                  $ref: "#/components/examples/EXPIRED_TOKEN"
  /v1/auth/logout:
    post:
      tags:
        - auth
      summary: 사용자 로그아웃
      description: 현재 사용자의 JWT Access Token과 Refresh Token을 모두 무효화하여 로그아웃을 처리합니다.
      security:
        - BearerAuth: []
      responses:
        '204':
          description: No Content - 로그아웃 성공
        '401':
          description: Unauthorized - 인증 실패
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                EXPIRED_TOKEN:
                  $ref: "#/components/examples/EXPIRED_TOKEN"
  /v1/auth/{provider}/login:
    get:
      tags:
        - auth
      summary: OAuth 로그인 시작
      description: 지정된 소셜 로그인 제공자({provider})의 인증 페이지로 사용자를 리다이렉트합니다.
      parameters:
        - $ref: "#/components/parameters/provider"
      responses:
        '302':
          description: Found - 소셜 로그인 페이지로 리다이렉트
          headers:
            Location:
              description: 소셜 로그인 제공자의 인증 페이지 URL
              schema:
                type: string
                example: "https://accounts.google.com/o/oauth2/v2/auth?..."
        '404':
          description: Not Found - 지원하지 않는 제공자
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                NOT_FOUND_PROVIDER:
                  $ref: "#/components/examples/NOT_FOUND_PROVIDER"

components:
  parameters:
    page:
      name: page
      in: query
      description: 페이지 번호 (기본값 1)
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1
    size:
      name: size
      in: query
      description: 페이지 당 항목 수 (기본값 20)
      required: false
      schema:
        type: integer
        minimum: 1
        default: 20
    order_id:
      name: order_id
      in: path
      required: true
      description: 주문 ID
      schema:
        type: integer
        example: 123
    provider:
      name: provider
      in: path
      required: true
      description: 소셜 로그인 제공자 이름
      schema:
        type: string
        enum:
          - GOOGLE
          - NAVER
          - KAKAO
        example: KAKAO
    user_id:
      name: user_id
      in: path
      required: true
      description: 조회할 사용자의 ID
      schema:
        type: string
        example: "testuser123"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ErrorResponse:
      type: object
      properties:
        error_code:
          type: integer
        error_message:
          type: string
        error_data:
          type: object
          additionalProperties: true
          example:
            display_message: "display_message"
    ProductResponseV1:
      type: object
      properties:
        product_id:
          type: integer
          example: 123
        product_name:
          type: string
          example: 여름에도 시원한 시어서커 침구set
        product_amount:
          type: integer
          example: 156000
        stock:
          type: integer
          example: 200
        created_at:
          type: string
          format: date-time
          example: "2025-04-16T10:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-04-16T10:00:00Z"
    OrderRequestV1:
      type: object
      required:
        - user_id
        - product_id
        - quantity
      properties:
        user_id:
          type: integer
          example: 123
        product_id:
          type: integer
          example: 123
        quantity:
          type: integer
          minimum: 1
          example: 200
    OrderResponseV1:
      type: object
      properties:
        order_id:
          type: integer
          example: 123
        user_id:
          type: integer
          example: 123
        product_id:
          type: integer
          example: 123
        order_status:
          type: string
          enum:
            - INITIAL
            - PAID
            - CANCELED
          example: INITIAL
        total_amount:
          type: integer
          example: 53000
        quantity:
          type: integer
          example: 20
        kakaopay_ready_url:
          type: string
          format: uri
          example: https://kapi.kakao.com/ready/abc123
        created_at:
          type: string
          format: date-time
          example: "2025-04-16T10:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-04-16T10:00:00Z"
    KakaoPayReadyRequestV1:
      type: object
      required:
        - cid
        - partner_order_id
        - partner_user_id
        - item_name
        - quantity
        - total_amount
        - tax_free_amount
        - approval_url
        - cancel_url
        - fail_url
      properties:
        cid:
          type: string
          description: 테스트용 카카오페이 가맹점 코드
          example: "TC0ONETIME"
        partner_order_id:
          type: string
          description: 가맹점 주문 번호 (서버 내부에서 생성된 주문 ID)
          example: "20002"
        partner_user_id:
          type: string
          description: 사용자 식별 ID
          example: "10002"
        item_name:
          type: string
          example: "잠이 솔솔 베개"
        quantity:
          type: integer
          example: 1
        total_amount:
          type: integer
          example: 10000
        tax_free_amount:
          type: integer
          description: 상품 비과세 금액(0으로 고정)
          example: 0
        approval_url:
          type: string
          format: uri
          description: 결제 승인 완료 시 redirect될 URL
          example: "https://example.com/v1/payments/kakao/approve"
        cancel_url:
          type: string
          format: uri
          description: 결제 취소 시 redirect될 URL
          example: "https://example.com/v1/payments/kakao/cancel"
        fail_url:
          type: string
          format: uri
          description: 결제 실패 시 redirect될 URL
          example: "https://example.com/v1/payments/kakao/fail"
    KakaoPayReadyResponseV1:
      type: object
      required:
        - tid
        - next_redirect_pc_url
        - created_at
      properties:
        tid:
          type: string
          description: 카카오페이 결제 고유번호, 20자
          example: "T1234567890abcdef123"
        next_redirect_pc_url:
          type: string
          format: uri
          description: PC 웹에서 TMS 사용자 정보 입력 화면으로 redirect할 URL
          example: "https://kauth.kakao.com/abc/pc"
        created_at:
          type: string
          format: date-time
          description: 결제 준비 요청 시간
          example: "2024-05-23T16:25:00Z"
    ProductListResponseV1:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: "#/components/schemas/ProductResponseV1"
        currentPage:
          type: integer
          example: 1
        totalPages:
          type: integer
          example: 5
        totalElements:
          type: integer
          example: 100
    OrderListResponseV1:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: "#/components/schemas/OrderResponseV1"
        currentPage:
          type: integer
          example: 1
        totalPages:
          type: integer
          example: 5
        totalElements:
          type: integer
          example: 100

    UserJoinRequestV1:
      type: object
      required:
        - userId
        - password
        - email
      properties:
        userId:
          type: string
          description: 사용자 아이디
          example: "testuser123"
        password:
          type: string
          format: password
          description: 사용자 비밀번호 (최소 8자, 영문, 숫자, 특수문자 포함)
          example: "password123!"
        email:
          type: string
          format: email
          description: 사용자 이메일
          example: "test@example.com"
    UserJoinResponseV1:
      type: object
      properties:
        userId:
          type: string
          description: 생성된 사용자 아이디
          example: "testuser123"
        email:
          type: string
          description: 생성된 사용자 이메일
          example: "test@example.com"
        createdAt:
          type: string
          format: date-time
          description: 계정 생성 시간
          example: "2025-08-03T17:30:00Z"
    UserLoginRequestV1:
      type: object
      required:
        - userId
        - password
      properties:
        userId:
          type: string
          example: "testuser123"
        password:
          type: string
          format: password
          example: "password123!"
    UserLoginResponseV1:
      type: object
      properties:
        accessToken:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        refreshToken:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    UserResponseV1:
      type: object
      properties:
        userId:
          type: string
          description: 사용자 아이디
          example: "testuser123"
        email:
          type: string
          description: 사용자 이메일
          example: "test@example.com"
        createdAt:
          type: string
          format: date-time
          description: 가입일
          example: "2025-08-03T17:30:00Z"

    AuthTokenRefreshRequestV1:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string
          description: 갱신에 사용될 Refresh Token
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."


  examples:
    INVALID_PAGE:
      summary: 유효하지 않은 페이지 번호
      value:
        error_code: 100001
        error_message: "page는 1 이상의 숫자여야 합니다."
        error_data: null
    INVALID_SIZE:
      summary: 유효하지 않은 크기
      value:
        error_code: 100002
        error_message:  "page 당 size는 1에서 20 사이의 숫자여야 합니다."
        error_data: null
    NOT_FOUND_PRODUCT:
      summary: 해당하는 상품을 찾을 수 없음
      value:
        error_code: 200001
        error_message: "상품 데이터를 찾을 수 없습니다."
        error_data: null
    INVALID_ORDER_STATUS:
      summary: 유효하지 않은 주문 상태
      value:
        error_code: 300001
        error_message: "order_status 값은 INITIAL, PAID, CANCELED 중 하나여야 합니다."
        error_data: null
    INVALID_ORDER_ID_PARAM:
      summary: 유효하지 않는 파라미터
      value:
        error_code: 300002
        error_message: "파라미터 타입이 잘못되었습니다."
        error_data: null
    NOT_FOUND_ORDER:
      summary: 해당하는 주문을 찾을 수 없음
      value:
        error_code: 300003
        error_message: "주문 데이터를 찾을 수 없습니다."
        error_data: null
    INVALID_ORDER_QUANTITY:
      summary: 잘못된 주문 수량
      value:
        error_code: 300004
        error_message: "요청 파라미터가 유효하지 않습니다. 수량은 1 이상이어야 합니다."
        error_data: null
    INSUFFICIENT_STOCK:
      summary: 재고 부족
      value:
        error_code: 300005
        error_message: "상품의 재고가 부족합니다."
        error_data: null
    INVALID_ORDER_STATUS_TRANSITION:
      summary: 유효하지 않은 주문 상태 전이
      value:
        error_code: 300006
        error_message: "결제 준비는 INITIAL 상태의 주문에서만 가능합니다."
        error_data: null
    INVALID_LOGIN_INPUT:
      summary: 유효하지 않은 로그인 데이터
      value:
        error_code: 400001
        error_message: "유효하지 않은 입력입니다."
        error_data: null
    USER_ALREADY_EXISTS:
      summary: 사용자 ID 또는 이메일 중복
      value:
        error_code: 400002
        error_message: "이미 존재하는 사용자 ID 또는 이메일입니다."
        error_data: null
    INVALID_CREDENTIALS:
      summary: 아이디 또는 비밀번호 불일치
      value:
        error_code: 400003
        error_message: "아이디 또는 비밀번호가 올바르지 않습니다."
        error_data: null
    INVALID_TOKEN:
      summary: 유효하지 않은 토큰
      value:
        error_code: 400004
        error_message: "요청에 포함된 토큰의 형식이 유효하지 않습니다."
        error_data: null
    EXPIRED_TOKEN:
      summary: 만료된 토큰
      value:
        error_code: 400005
        error_message: "토큰이 만료되어 더 이상 사용할 수 없습니다. 다시 로그인해 주세요."
        error_data: null
    NOT_FOUND_PROVIDER:
      summary: 만료된 토큰
      value:
        error_code: 400006
        error_message: "지원하지 않는 OAuth 제공자입니다."
        error_data: null
    PERMISSION_DENIED:
      summary: 권한 없음
      value:
        error_code: 400007
        error_message: "다른 사용자의 정보는 조회할 수 없습니다."
        error_data: null
    NOT_FOUND_USER:
      summary: 해당하는 사용자를 찾을 수 없음
      value:
        error_code: 400008
        error_message: "해당 사용자를 찾을 수 없습니다."
        error_data: null
